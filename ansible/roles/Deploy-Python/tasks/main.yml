---
- name: Create Virtualenv
  command: >
    {{ python_version }}
    /usr/local/bin/{{ 'virtualenv-3.4' if python_version == 'python3.4' else 'virtualenv' }}
    -p {{ python_version }} {{ prod_site_dir }}/env
  args:
    chdir: "{{ prod_site_dir }}"
    creates: "{{ prod_site_dir }}/env/pip-selfcheck.json"

- name: Generate Secret
  set_fact:
    SECRET_KEY: >
      {{ lookup('password',
      '../../../storage/' + ansible_hostname + '/' + production_domain + '-secret
      chars=ascii_letters,digits length=64') }}
  when: env_vars.SECRET_KEY is not defined

- name: Add Secret to Site Config
  lineinfile:
    dest: /etc/nginx/sites-available/{{ production_domain }}
    insertafter: ^\s*passenger_app_type
    regexp: ^\s*passenger_env_var\s+SECRET_KEY
    line: passenger_env_var SECRET_KEY {{ SECRET_KEY }};
    create: no
  notify: Reload Nginx Config
  when: env_vars.SECRET_KEY is not defined

- name: Add Secret to Virtualenv Activation
  lineinfile:
    dest: "{{ prod_site_dir }}/env/bin/activate"
    regexp: ^\s*export\s+SECRET_KEY=
    line: 'export SECRET_KEY="{{ SECRET_KEY }}"'
    create: no
  when: env_vars.SECRET_KEY is not defined

- name: Add Environment Values to Virtualenv Activation
  lineinfile:
    dest: "{{ prod_site_dir }}/env/bin/activate"
    regexp: ^\s*export\s+{{ item.key }}=
    line: 'export {{ item.key }}="{{ item.value }}"'
    create: no
  with_dict: "{{ env_vars | default({}) }}"

- name: Install Dependencies
  pip:
    chdir: "{{ prod_site_dir }}"
    requirements: "{{ prod_site_dir }}/requirements.txt"
    virtualenv: "{{ prod_site_dir }}/env"
    executable: "{{ prod_site_dir }}/env/bin/pip"

- include: django.yml
  when: site_type == "django"
